#name: Julia CI
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  test:
#    runs-on: windows-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Julia
#      uses: julia-actions/setup-julia@latest
#      with:
#        version: '1.6'
#    - name: Install Dependencies
#      run: julia --project=./ -e 'using Pkg; Pkg.instantiate();'
#    - name: Run Tests with Coverage
#      run: julia --project=./ -e 'using Pkg; Pkg.test(coverage=true);'
#  #  - name: Upload coverage to Codecov
#  #    run: julia --project=./ -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
#    - name: Upload coverage reports to Codecov
#      uses: codecov/codecov-action@v4.0.1
#      with: 
#        file: lcov.info
#        token: ${{ secrets.CODECOV_TOKEN }}
#                  julia --color=yes --project=oscar-dev/project/ -e '${{ env.oscar_run_tests }}'

name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5' # Replace this with the minimum Julia version that your package supports. E.g. if your package requires Julia 1.5 or higher, change this to '1.5'.
          #- '1' # Leave this line unchanged. '1' will automatically expand to the latest stable 1.x release of Julia.
          #- 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
#  docs:
#    name: Documentation
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: julia-actions/setup-julia@v1
#        with:
#          version: '1'
#      - run: |
#          julia --project=docs -e '
#            using Pkg
#            Pkg.develop(PackageSpec(path=pwd()))
#            Pkg.instantiate()'
#      - run: |
#          julia --project=docs -e '
#            using Documenter: doctest
#            using MYPACKAGE
#            doctest(MYPACKAGE)' # change MYPACKAGE to the name of your package
#      - run: julia --project=docs docs/make.jl
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
