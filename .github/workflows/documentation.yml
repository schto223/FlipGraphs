name: Documentation

on:
  push:
    branches:
      - 'main'
      - 'dev'
    tags: '*'
  pull_request:

jobs:
  build:
    permissions:
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.6'
      - uses: julia-actions/cache@v1
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
        run: julia --project=docs/ docs/make.jl

#
#
#  test:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        julia-version:
#          - '1.5'
#          - '1.6'
#          - '1.10'
#        os:
#          - ubuntu-latest
#        include:
#          # Add a few windows and macOS jobs (not too many, the number we can run in parallel is limited)
#          - julia-version: '1.10'
#            os: macOS-latest
#          - julia-version: '1.10'
#            os: windows-latest

#    steps:
#      - uses: actions/checkout@v4
#        with:
#          # For Codecov, we must also fetch the parent of the HEAD commit to
          # be able to properly deal with PRs / merges
#          fetch-depth: 2
#      - name: "Set up Julia"
#        uses: julia-actions/setup-julia@v2
#        with:
#          version: ${{ matrix.julia-version }}
#      - name: "Cache artifacts"
#        uses: julia-actions/cache@v1
#      - name: "Build package"
#        uses: julia-actions/julia-buildpkg@v1
#      - name: "Run tests"
#        uses: julia-actions/julia-runtest@v1
#        with:
#          depwarn: error
#        run: |
#          julia --project=/ --color=yes --code-coverage -e '
#            using Pkg
#            Pkg.develop(PackageSpec(path=pwd()))
#            Pkg.instantiate()
#            using FlipGraphs
#            test(FlipGraphs)'
#      - name: "Process code coverage"
#        uses: julia-actions/julia-processcoverage@v1
#      - name: "Upload coverage data to Codecov"
#        continue-on-error: true
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
